Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">Carousel Sample</string>
+</resources>
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
Index: app/src/main/java/com/apparks/carouselsample/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/apparks/carouselsample/MainActivity.java	(revision )
+++ app/src/main/java/com/apparks/carouselsample/MainActivity.java	(revision )
@@ -0,0 +1,88 @@
+package com.apparks.carouselsample;
+
+import android.support.v4.app.FragmentActivity;
+import android.support.v4.view.ViewPager;
+import android.os.Bundle;
+import android.util.DisplayMetrics;
+
+public class MainActivity extends FragmentActivity {
+    public final static int LOOPS = 1000;
+    public static int FIRST_PAGE; // = count * LOOPS / 2;
+    public final static float BIG_SCALE = 1.0f;
+    public final static float SMALL_SCALE = 0.5f;
+    public final static float FULL_OPACITY = 1.0f;
+    public final static float ALMOST_HALF_OPACITY = 0.4f;
+    public final static float MINI_OPACITY = 0.05f;
+    public final static float DIFF_OPACITY_1 = FULL_OPACITY - ALMOST_HALF_OPACITY;
+    public final static float DIFF_OPACITY_2 = ALMOST_HALF_OPACITY - MINI_OPACITY;
+    public final static float DIFF_SCALE = BIG_SCALE - SMALL_SCALE;
+    public PagerAdapter adapter;
+    public PagerAdapter adapter2;
+    public PagerAdapter adapter3;
+    public ViewPager pager;
+    public ViewPager pager2;
+    public ViewPager pager3;
+    /*** variables for the View */
+    public int coverUrl[];
+    public static int count;
+
+    public static MainActivity mainActivityCtx;
+
+    public static int currentPage = 0;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+        coverUrl = new int[] { R.drawable.icon0, R.drawable.icon1,
+                R.drawable.icon2, R.drawable.icon3, R.drawable.icon4,
+                R.drawable.icon5, R.drawable.icon6, R.drawable.icon7,
+                R.drawable.icon8, R.drawable.icon9 };
+
+        mainActivityCtx = this;
+        pager = (ViewPager) findViewById(R.id.myviewpager);
+        pager2 = (ViewPager) findViewById(R.id.myviewpager2);
+        pager3 = (ViewPager) findViewById(R.id.myviewpager3);
+        count = coverUrl.length;
+
+        DisplayMetrics metrics = new DisplayMetrics();
+        getWindowManager().getDefaultDisplay().getMetrics(metrics);
+        int pageMargin = 0;
+        pageMargin = (int) ((metrics.widthPixels / 4) *3);
+        pager.setPageMargin(-1020);
+        pager2.setPageMargin(-1020);
+        pager3.setPageMargin(-1020);
+
+        try {
+            FIRST_PAGE = count * LOOPS / 2;
+
+            adapter = new PagerAdapter(this, this.getSupportFragmentManager());
+            pager.setAdapter(adapter);
+            adapter.notifyDataSetChanged();
+            pager.setOnPageChangeListener(adapter);
+            pager.setCurrentItem(FIRST_PAGE); // FIRST_PAGE
+            pager.setOffscreenPageLimit(15);
+
+            /*
+            adapter2 = new PagerAdapter(this, this.getSupportFragmentManager());
+            pager2.setAdapter(adapter2);
+            //adapter.notifyDataSetChanged();
+            //FIRST_PAGE = count * LOOPS / 2;
+            pager2.setOnPageChangeListener(adapter2);
+            pager2.setCurrentItem(FIRST_PAGE); // FIRST_PAGE
+            pager2.setOffscreenPageLimit(15);
+
+            adapter3 = new PagerAdapter(this, this.getSupportFragmentManager());
+            pager3.setAdapter(adapter3);
+            //adapter.notifyDataSetChanged();
+            //FIRST_PAGE = count * LOOPS / 2;
+            pager3.setOnPageChangeListener(adapter3);
+            pager3.setCurrentItem(FIRST_PAGE); // FIRST_PAGE
+            pager3.setOffscreenPageLimit(15);
+            */
+        } catch (Exception e) {
+            // TODO: handle exception
+            e.printStackTrace();
+        }
+    }
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.apparks.carouselsample">
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
Index: app/src/test/java/com/apparks/carouselsample/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/apparks/carouselsample/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/apparks/carouselsample/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.apparks.carouselsample;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/apparks/carouselsample/CustomFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/apparks/carouselsample/CustomFragment.java	(revision )
+++ app/src/main/java/com/apparks/carouselsample/CustomFragment.java	(revision )
@@ -0,0 +1,64 @@
+package com.apparks.carouselsample;
+
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+/**
+ * Created by longdao on 12/03/16.
+ */
+public class CustomFragment extends Fragment {
+    public static Fragment newInstance(MainActivity context, int pos, float scale, float opacity) {
+        Bundle b = new Bundle();
+        b.putInt("pos", pos);
+        b.putFloat("scale", scale);
+        b.putFloat("opacity", opacity);
+
+        return Fragment.instantiate(context, CustomFragment.class.getName(), b);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        if (container == null) {
+            return null;
+        }
+
+        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(300, 300);
+        LinearLayout fragmentLL  = (LinearLayout) inflater.inflate(R.layout.mf, container, false);
+        int pos   = this.getArguments().getInt("pos");
+
+        TextView tv  = (TextView) fragmentLL.findViewById(R.id.text);
+        tv.setText("Image " +  pos );
+
+        ImageView iv = (ImageView) fragmentLL.findViewById(R.id.pagerImg);
+        //iv.setAlpha(_opacity);
+        iv.setLayoutParams(layoutParams);
+        iv.setImageResource(MainActivity.mainActivityCtx.coverUrl[pos] );
+        iv.setPadding(10, 10, 10, 10);
+
+        CustomLinearLayout root = (CustomLinearLayout) fragmentLL.findViewById(R.id.root);
+        float _opacity = this.getArguments().getFloat("opacity");
+        float scale   = this.getArguments().getFloat("scale");
+        root.setScaleBoth(scale);
+        root.setAlpha(_opacity);
+
+        CustomLinearLayout root2 = (CustomLinearLayout) fragmentLL.findViewById(R.id.root);
+        //float _opacity = this.getArguments().getFloat("opacity");
+        //float scale   = this.getArguments().getFloat("scale");
+        root.setScaleBoth(scale);
+        root.setAlpha(_opacity);
+
+        CustomLinearLayout root3 = (CustomLinearLayout) fragmentLL.findViewById(R.id.root);
+        //float _opacity = this.getArguments().getFloat("opacity");
+        //float scale   = this.getArguments().getFloat("scale");
+        root.setScaleBoth(scale);
+        root.setAlpha(_opacity);
+
+        return fragmentLL;
+    }
+}
Index: app/src/main/res/layout/mf.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/mf.xml	(revision )
+++ app/src/main/res/layout/mf.xml	(revision )
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center"
+    android:orientation="vertical" >
+
+    <com.apparks.carouselsample.CustomLinearLayout
+        android:id="@+id/root"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@android:color/transparent"
+        android:gravity="center"
+        android:orientation="vertical" >
+
+        <ImageView
+            android:id="@+id/pagerImg"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp"
+            android:src="@drawable/logo"/>
+
+        <TextView
+            android:id="@+id/text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text=""
+            android:textColor="#000"
+            android:textSize="20dp" />
+    </com.apparks.carouselsample.CustomLinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /Users/longdao/Library/Android/sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/java/com/apparks/carouselsample/CustomLinearLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/apparks/carouselsample/CustomLinearLayout.java	(revision )
+++ app/src/main/java/com/apparks/carouselsample/CustomLinearLayout.java	(revision )
@@ -0,0 +1,46 @@
+package com.apparks.carouselsample;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.util.AttributeSet;
+import android.widget.LinearLayout;
+
+/**
+ * Created by longdao on 12/03/16.
+ */
+public class CustomLinearLayout extends LinearLayout {
+    private float scale = MainActivity.BIG_SCALE;
+    private float opacity = MainActivity.ALMOST_HALF_OPACITY;
+
+    public CustomLinearLayout(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public CustomLinearLayout(Context context) {
+        super(context);
+    }
+
+    public void setScaleBoth(float scale) {
+        this.scale = scale;
+        this.invalidate();
+
+    }
+
+    /*
+    @Override
+    public void setAlpha(float alpha) {
+        this.opacity = alpha;
+        this.invalidate();
+    }
+    */
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        // The main mechanism to display scale animation, you can customize it as your needs
+        int w = this.getWidth();
+        int h = this.getHeight();
+        canvas.scale(scale, scale, w/2, h/2);
+
+        super.onDraw(canvas);
+    }
+}
Index: app/src/main/java/com/apparks/carouselsample/PagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/apparks/carouselsample/PagerAdapter.java	(revision )
+++ app/src/main/java/com/apparks/carouselsample/PagerAdapter.java	(revision )
@@ -0,0 +1,119 @@
+package com.apparks.carouselsample;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentPagerAdapter;
+import android.support.v4.view.ViewPager;
+
+/**
+ * Created by longdao on 13/03/16.
+ */
+public class PagerAdapter extends FragmentPagerAdapter implements ViewPager.OnPageChangeListener {
+    private CustomLinearLayout cur = null;
+    private CustomLinearLayout next = null;
+    private CustomLinearLayout nextnext = null;
+    private CustomLinearLayout prepre = null;
+    private CustomLinearLayout pre = null;
+    private MainActivity context;
+    private FragmentManager fm;
+    private float scale;
+    private float opacity;
+    int pCount = 0;
+
+    public PagerAdapter(MainActivity context, FragmentManager fm) {
+        super(fm);
+        this.fm = fm;
+        this.context = context;
+    }
+
+    @Override
+    public Fragment getItem(int position) {
+        // make the first pager bigger than others
+        try {
+            if (position == MainActivity.FIRST_PAGE) {
+                scale = MainActivity.BIG_SCALE;
+                opacity = MainActivity.FULL_OPACITY;
+            } else if (position == (MainActivity.FIRST_PAGE + 1) || position == (MainActivity.FIRST_PAGE - 1)){
+                scale = MainActivity.SMALL_SCALE;
+                opacity = MainActivity.ALMOST_HALF_OPACITY;
+            } else {
+                scale = MainActivity.SMALL_SCALE;
+                opacity = MainActivity.MINI_OPACITY;
+            }
+
+            position = position % MainActivity.count;
+
+        } catch (Exception e) {
+            // TODO: handle exception
+        }
+        return CustomFragment.newInstance(context, position, scale, opacity);
+    }
+
+    @Override
+    public int getCount() {
+        int count = 0;
+        try {
+            count = MainActivity.count * MainActivity.LOOPS;
+        } catch (Exception e) {
+            // TODO: handle exception
+            e.printStackTrace();
+        }
+        return  count  ;
+    }
+
+    @Override
+    public void onPageScrolled( int position, float positionOffset, int positionOffsetPixels){
+        try {
+            if (positionOffset >= 0f && positionOffset <= 2f) {
+                cur = getRootView(position);
+                next = getRootView(position + 1);
+                nextnext = getRootView(position + 2);
+                prepre = getRootView(position - 2);
+                pre = getRootView(position - 1);
+
+                cur.setScaleBoth(MainActivity.BIG_SCALE - MainActivity.DIFF_SCALE * positionOffset);
+                cur.setAlpha(MainActivity.FULL_OPACITY - MainActivity.DIFF_OPACITY_1 * positionOffset);
+
+                next.setScaleBoth(MainActivity.SMALL_SCALE + MainActivity.DIFF_SCALE * positionOffset);
+                next.setAlpha(MainActivity.ALMOST_HALF_OPACITY + MainActivity.DIFF_OPACITY_1 * positionOffset);
+
+                pre.setAlpha(MainActivity.ALMOST_HALF_OPACITY);
+                nextnext.setAlpha(MainActivity.MINI_OPACITY + MainActivity.DIFF_OPACITY_2 * positionOffset);
+                prepre.setAlpha(MainActivity.MINI_OPACITY);
+
+
+
+                pCount++;
+            }
+        } catch (Exception e) {
+            // TODO: handle exception
+            e.printStackTrace();
+        }
+    }
+
+    @Override
+    public void onPageSelected(int position) {
+
+    }
+
+    @Override
+    public void onPageScrollStateChanged(int state) {
+
+    }
+
+    private CustomLinearLayout getRootView(int position) {
+        return (CustomLinearLayout) fm.findFragmentByTag(this.getFragmentTag(position)).getView().findViewById(R.id.root);
+    }
+
+    private CustomLinearLayout getRootView2(int position) {
+        return (CustomLinearLayout) fm.findFragmentByTag(this.getFragmentTag(position)).getView().findViewById(R.id.root);
+    }
+
+    private CustomLinearLayout getRootView3(int position) {
+        return (CustomLinearLayout) fm.findFragmentByTag(this.getFragmentTag(position)).getView().findViewById(R.id.root);
+    }
+
+    private String getFragmentTag(int position) {
+        return "android:switcher:" + context.pager.getId() + ":" + position;
+    }
+}
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.apparks.carouselsample.MainActivity">
+    <android.support.v4.view.ViewPager
+        android:id="@+id/myviewpager"
+        android:layout_width="match_parent"
+        android:layout_height="200dp"
+        android:layout_gravity="center"
+        android:overScrollMode="never" />
+    <android.support.v4.view.ViewPager
+        android:id="@+id/myviewpager2"
+        android:layout_width="match_parent"
+        android:layout_height="200dp"
+        android:layout_gravity="center"
+        android:overScrollMode="never"
+        android:layout_below="@id/myviewpager"/>
+    <android.support.v4.view.ViewPager
+        android:id="@+id/myviewpager3"
+        android:layout_width="match_parent"
+        android:layout_height="200dp"
+        android:layout_gravity="center"
+        android:overScrollMode="never"
+        android:layout_below="@id/myviewpager2"/>
+</RelativeLayout>
Index: app/src/androidTest/java/com/apparks/carouselsample/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/apparks/carouselsample/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/com/apparks/carouselsample/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.apparks.carouselsample;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,26 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "23.0.2"
+
+    defaultConfig {
+        applicationId "com.apparks.carouselsample"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.1.1'
+}
